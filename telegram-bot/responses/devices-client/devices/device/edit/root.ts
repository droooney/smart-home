import { Markdown, MessageResponse } from '@tg-sensei/bot';
import devicesClient from 'devices-client/client';

import { DevicesClientCallbackButtonType } from 'telegram-bot/types/keyboard/devices-client';

import { backToCallbackButton, callbackButton } from 'telegram-bot/utilities/keyboard';
import { formatDeviceFields } from 'telegram-bot/utilities/responses/devices-client';

import { callbackDataProvider } from 'telegram-bot/bot';

callbackDataProvider.handle(DevicesClientCallbackButtonType.EditDevice, async (ctx) => {
  const { deviceId } = ctx.callbackData;

  await ctx.respondWith(await getEditDeviceResponse(deviceId));
});

export async function getEditDeviceResponse(deviceId: number): Promise<MessageResponse> {
  const device = await devicesClient.getDevice(deviceId);

  return new MessageResponse({
    content: Markdown.create`${Markdown.bold('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞')}

${formatDeviceFields(device, ['name', 'type', 'manufacturer', 'mac', 'address'])}`,
    replyMarkup: await callbackDataProvider.buildInlineKeyboard([
      [
        callbackButton('üÖ∞Ô∏èÔ∏è', '–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ', {
          type: DevicesClientCallbackButtonType.EditDeviceName,
          deviceId,
        }),
        callbackButton('üè≠Ô∏è', '–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è', {
          type: DevicesClientCallbackButtonType.EditDeviceManufacturer,
          deviceId,
        }),
      ],
      [
        callbackButton('üî†Ô∏è', '–ò–∑–º–µ–Ω–∏—Ç—å MAC', {
          type: DevicesClientCallbackButtonType.EditDeviceMac,
          deviceId,
        }),
        callbackButton('üåêÔ∏è', '–ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å', {
          type: DevicesClientCallbackButtonType.EditDeviceAddress,
          deviceId,
        }),
      ],
      [
        backToCallbackButton('–ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É', {
          type: DevicesClientCallbackButtonType.OpenDevice,
          deviceId,
        }),
        backToCallbackButton('–ö —Å–ø–∏—Å–∫—É', {
          type: DevicesClientCallbackButtonType.OpenDevicesList,
        }),
      ],
    ]),
  });
}
